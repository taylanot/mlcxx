INFO - unimodal-nonlinear - Running command 'main'
INFO - unimodal-nonlinear - Started run with ID "3"
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0678])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0678])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0678])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0678])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0698])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.0279])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.0527])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.0115])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0179])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.4558])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5746])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5000])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0537])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.1522])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.2307])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.1832])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.3654])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.4715])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5440])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5733])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5447])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5649])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5537])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5977])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.6295])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.4358])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.4469])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.2421])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.1788])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.9262])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.0741])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.5359])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.5041])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.4443])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.2025])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.3674])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.3121])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.2888])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.2617])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.1965])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.2217])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.1338])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.0682])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.0160])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.0029])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5300])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.6717])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.8540])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.5338])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.9015])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.0397])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8153])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8006])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8221])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.7098])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.6821])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.6565])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.7686])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.7077])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.7004])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.7664])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.5529])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.6117])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.4794])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.4713])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.8821])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.8770])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.1008])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.1302])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.8587])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.5185])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.4478])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.0973])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8411])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8713])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.0309])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.0881])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.0710])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.0972])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.9079])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8002])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.0081])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.0135])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8538])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.9827])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.1680])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.2548])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.3986])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.4577])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.4575])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.1268])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.3762])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.7897])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2580])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2018])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2254])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.3163])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.3052])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2390])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2175])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.1017])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.8433])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2905])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.1461])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.2947])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.5513])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.5057])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.6704])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.7040])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-0.7388])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.0960])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.9021])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.6019])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.8430])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.4894])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5625])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5632])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5567])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5671])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5361])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.6078])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5675])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5579])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5484])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5032])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.7695])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.7943])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.9925])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.9886])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.5367])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-3.5279])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.8629])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.8460])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.6025])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.9954])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.5528])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.4461])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.6359])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.0702])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.0322])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.8429])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.7606])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.7549])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.7491])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.7774])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.0255])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-1.9942])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.2807])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.2761])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.5012])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.4192])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.3103])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.1267])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.9752])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.8924])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.2015])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.7151])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.7532])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.7498])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.5665])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.1843])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.1574])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.1530])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.1627])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.0853])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.4605])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.4271])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.5465])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-2.5583])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([0.5105])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.1365])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([-4.5740])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.5494])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.9015])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.4087])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.5642])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.7502])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.7359])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.7472])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([1.8543])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.4213])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.4184])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.4146])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.4110])
layers.output.bias tensor([-0.0688])
layers.output.bias tensor([2.3881])
INFO - unimodal-nonlinear - Completed after 0:00:03
