/**
 * @file datagen.h
 * @author Ozgur Taylan Turan
 *
 * A simple toy data generation interface
 *
 * TODO: Increase the dimensionality, add some classification datasets banana??
 *
 *
 */

#ifndef DATAGEN_H
#define DATAGEN_H

namespace utils {
namespace data {
namespace regression {

struct Dataset 
{
  size_t size_;
  size_t dimension_;
  double noise_std_;

  arma::mat inputs_;
  arma::mat labels_;

  Dataset ( );
  Dataset ( const size_t& D, const size_t& N );

  void Set ( const size_t& D, const size_t& N );

  void Generate ( const double& scale, const double& phase,
                  const std::string& type );

  void Generate ( const double& scale, const double& phase,  
                  const std::string& type, const double& noise_std );

  void Generate ( const size_t& M, const std::string& type );

  void Generate ( const size_t& M, const std::string& type,
                  const arma::rowvec& noise_std );

  void Dataset::Noise ( const double& noise_std );

  void Dataset::Noise ( const size_t& M, const arma::rowvec& noise_std );

  void Save( std::string filename );
};

//struct SineGen
//{
//  size_t size;
//  size_t dimension;
//
//  arma::rowvec a;
//  arma::rowvec p;
//
//  SineGen ( );
//  SineGen ( size_t M );
//
//  arma::mat Predict ( arma::mat inputs, std::string type ) const;
//
//};

} // regression 

namespace classification{

struct Dataset 
{
  size_t size_;
  size_t dimension_;
  double noise_std_;

  arma::mat inputs_;
  arma::mat labels_;

  Dataset ( );
  Dataset ( size_t D, size_t N, size_t C, double noise_std );

  void Set ( size_t D, size_t N, size_t C, double noise_std );

  void Generate ( double scale, double phase, std::string type );
  void Generate ( size_t M, std::string type );

  void Save( std::string filename );
};

} // namespace data

} // namespace utils


#include "datagen_impl.h"

#endif
